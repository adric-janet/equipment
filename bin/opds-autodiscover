#!/usr/bin/php
<?php

# This script uses the list of learning providers to auto discover any opds
# This takes the list of files to download from a configuration file, which is
# generated from the data at hub.data.ac.uk


if(in_array('--dryrun',$argv)){
	$dryrun = true;
}else{
	$dryrun = false;	
}



require_once( "../etc/eq_config.php" );


require_once( "{$eq_config->pwd}/lib/arc2/ARC2.php" );
require_once( "{$eq_config->pwd}/lib/Graphite/Graphite.php" );

require_once( "{$eq_config->pwd}/lib/OPDLib/OrgProfileDocument.php" );



require_once( "{$eq_config->pwd}/dataacukEquipment.php" );


$eq = new dataacukEquipment($eq_config);
$eq->launch_db();
$eq->db->dryrun = $dryrun;

$_SERVER['REQUEST_URI'] = NULL; //make arc behave;


$lps = "{$eq_config->pwd}/var/learning-providers-plus.tsv";

$homepages = $eq_config->opds->autodiscovers;
//$homepages = array();
$rows = file( $lps );

$config = array();	
foreach( $rows as $row )
{
	if( preg_match( "/^#/", $row ) ) { continue; } # skip commented lines
	$cells = preg_split( "/\t/", chop( $row ) );	
	if($cells[0]=='UKPRN') { continue; } #Header line
	
	
	$homepages[] = $cells[9];
}

//$map_opd = new DB\SQL\Mapper($eq->db,'autoOPDs');


foreach($homepages as $url)
{
	
	echo "Tried {$url}\n";
	try{ 
		$opd = @OrgProfileDocument::discover( $url );
	}
	catch( OPD_Discover_Exception $e )
	{
		continue;
	}
	catch( OPD_Load_Exception $e )
	{
		continue;
	}
	catch( OPD_Parse_Exception $e )
	{
	    continue;
	}
	catch( Exception $e )
	{
		continue;
	}
	
	echo "Found at $url\n";

	$eq->proc_opd($opd, 'autodiscovered');	
	
	$opds[] = $opd->opd_url;

}

file_put_contents("{$eq_config->pwd}/var/autodiscovered-opds.json", json_encode($opds));

$lopds = scandir($eq->config->opds->local);
foreach($lopds as $lopd){
	if($lopd{0}==".") continue;
	$eq->config->opds->direct[] = array("path"=>$eq->config->opds->local."/".$lopd, "type"=>"local");
}


foreach( $eq->config->opds->direct as $direct) {
	
	try{ 
		$opd = new OrgProfileDocument( $direct['path'], $direct['type'] );
	}
	catch( OPD_Discover_Exception $e )
	{
		continue;
	}
	catch( OPD_Load_Exception $e )
	{
		continue;
	}
	catch( OPD_Parse_Exception $e )
	{
	    continue;
	}
	catch( Exception $e )
	{
		continue;
	}
	echo "Tried {$direct['path']}\n";
	$opd->opd_url = $direct['path'];
	
	echo "Found at {$direct['path']}\n";
	
	$eq->proc_opd($opd, ($direct['type']=='local') ? 'local' : 'hosted');

}

